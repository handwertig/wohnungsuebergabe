<?php
declare(strict_types=1);
namespace App\Controllers;

use App\Auth;
use App\Database;
use App\View;
use PDO;

final class StatsController {
  public function index(): void {
    Auth::requireAuth();
    $pdo  = Database::pdo();
    $year = (int)($_GET['year'] ?? (int)date('Y'));
    if ($year < 2000 || $year > 2100) $year = (int)date('Y');

    // Protokolle + Objekt/WE
    $st = $pdo->query("
      SELECT p.id, p.unit_id, p.type, p.payload, p.created_at,
             u.label AS unit_label, o.id AS object_id, o.city, o.postal_code, o.street, o.house_no
      FROM protocols p
      JOIN units u ON u.id=p.unit_id
      JOIN objects o ON o.id=u.object_id
      WHERE p.deleted_at IS NULL
      ORDER BY o.city,o.street,o.house_no,u.label,p.created_at
    ");
    $rows = $st->fetchAll(PDO::FETCH_ASSOC);

    // Helper
    $payload = function($r){ return json_decode((string)($r['payload'] ?? '{}'), true) ?: []; };
    $tsOf = function(array $p,$created){ $ts=(string)($p['timestamp']??''); $ts=str_replace('T',' ',$ts); return $ts?strtotime($ts):strtotime((string)$created); };
    $toFloat=function($v){ if($v===''||$v===null) return null; $s=str_replace([',',' '],['.',''],(string)$v); return is_numeric($s)?(float)$s:null; };

    // Aggregates
    $flukByHouse=[]; $flukByUnit=[]; $months=array_fill(1,12,0);
    $byUnit=[]; $zwischen=0; $total=0;
    foreach($rows as $r){
      $p=$payload($r); $t=$tsOf($p,$r['created_at']);
      $byUnit[$r['unit_id']][]=['type'=>$r['type'],'ts'=>$t,'meters'=>($p['meters']??[]),'object_id'=>$r['object_id']];
      if($r['type']==='auszug'){
        $hid=$r['object_id'];
        $flukByHouse[$hid]=($flukByHouse[$hid]??['postal'=>$r['postal_code'],'city'=>$r['city'],'street'=>$r['street'],'house_no'=>$r['house_no'],'count'=>0]);
        $flukByHouse[$hid]['count']++;
        $uid=$r['unit_id'];
        $flukByUnit[$uid]=($flukByUnit[$uid]??['postal'=>$r['postal_code'],'city'=>$r['city'],'street'=>$r['street'],'house_no'=>$r['house_no'],'unit_label'=>$r['unit_label'],'count'=>0]);
        $flukByUnit[$uid]['count']++;
      }
      if ((int)date('Y', strtotime((string)$r['created_at']))===$year) { $months[(int)date('n', strtotime((string)$r['created_at']))]++; }
      if ($r['type']==='zwischen') $zwischen++;
      $total++;
    }

    // Mietdauer & Zähler-Δ
    $dur=[]; $meterKeys=['strom_we'=>'Strom (WE)','gas_we'=>'Gas (WE)','wasser_wm'=>'Wasser WM'];
    $mAgg=[]; foreach(array_keys($meterKeys) as $k) $mAgg[$k]=['sum'=>0.0,'n'=>0];
    foreach($byUnit as $uid=>$evs){
      usort($evs,fn($a,$b)=>$a['ts']<=>$b['ts']);
      $einTs=null; $einMeters=null;
      foreach($evs as $ev){
        if($ev['type']==='einzug'){ $einTs=$ev['ts']; $einMeters=$ev['meters']; }
        elseif($ev['type']==='auszug' && $einTs!==null){
          $dur[] = max(0,(int)floor(($ev['ts']-$einTs)/86400));
          foreach(array_keys($meterKeys) as $k){
            $a=$toFloat($einMeters[$k]['val']??null); $b=$toFloat($ev['meters'][$k]['val']??null);
            if($a!==null && $b!==null){ $mAgg[$k]['sum']+=($b-$a); $mAgg[$k]['n']++; }
          }
          $einTs=null; $einMeters=null;
        }
      }
    }
    $avgDur = $dur? round(array_sum($dur)/count($dur),1): null;
    $avgMeters=[]; foreach($mAgg as $k=>$v){ $avgMeters[$k]= $v['n']? round($v['sum']/$v['n'],2): null; }
    $zwischenPct = $total? round($zwischen/$total*100,1): 0.0;

    // Sortierungen
    $houseList=array_values($flukByHouse); usort($houseList,fn($a,$b)=>$b['count']<=>$a['count']);
    $unitList =array_values($flukByUnit);  usort($unitList, fn($a,$b)=>$b['count']<=>$a['count']);

    // Chart Data
    $labels=$data=[]; for($m=1;$m<=12;$m++){ $labels[]=date('M', mktime(0,0,0,$m,1,$year)); $data[]=$months[$m]; }

    // Render
    ob_start(); ?>
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h1 class="h4 mb-0">Statistik</h1>
      <form method="get" class="d-flex align-items-center gap-2">
        <label class="form-label mb-0">Jahr</label>
        <input class="form-control" style="width:110px" name="year" type="number" value="<?= (int)$year ?>">
        <button class="btn btn-primary">Anzeigen</button>
      </form>
    </div>

    <div class="row g-3 mb-3">
      <div class="col-md-6"><div class="card"><div class="card-body">
        <h2 class="h6 mb-2">Übergaben je Monat (<?= (int)$year ?>)</h2>
        <canvas id="monthlyChart" height="120"></canvas>
      </div></div></div>
      <div class="col-md-6"><div class="card"><div class="card-body">
        <h2 class="h6 mb-2">Zwischenprotokolle</h2>
        <div class="display-6"><?= (int)$zwischen ?></div>
        <div class="text-muted">Anteil: <?= htmlspecialchars((string)$zwischenPct) ?>%</div>
        <div class="mt-3"><div class="text-muted small">Ø Mietdauer</div><div class="display-6"><?= $avgDur!==null? $avgDur.' Tage':'—' ?></div></div>
      </div></div></div>
    </div>

    <div class="row g-3">
      <div class="col-lg-6"><div class="card"><div class="card-body">
        <h2 class="h6 mb-2">Fluktuation nach Haus (Auszüge)</h2>
        <div class="table-responsive"><table class="table table-sm">
          <thead><tr><th>PLZ Ort</th><th>Straße/Hausnr.</th><th class="text-end">Auszüge</th></tr></thead>
          <tbody>
          <?php foreach($houseList as $h): ?>
            <tr><td><?= htmlspecialchars((string)($h['postal']??'')) ?> <?= htmlspecialchars((string)$h['city']) ?></td>
                <td><?= htmlspecialchars((string)$h['street']) ?> <?= htmlspecialchars((string)$h['house_no']) ?></td>
                <td class="text-end"><?= (int)$h['count'] ?></td></tr>
          <?php endforeach; if(!$houseList) echo '<tr><td colspan="3" class="text-muted">Keine Daten.</td></tr>'; ?>
          </tbody></table></div>
      </div></div></div>
      <div class="col-lg-6"><div class="card"><div class="card-body">
        <h2 class="h6 mb-2">Fluktuation nach Wohnung (Auszüge)</h2>
        <div class="table-responsive"><table class="table table-sm">
          <thead><tr><th>PLZ Ort</th><th>Straße/Hausnr.</th><th>WE</th><th class="text-end">Auszüge</th></tr></thead>
          <tbody>
          <?php foreach($unitList as $u): ?>
            <tr><td><?= htmlspecialchars((string)($u['postal']??'')) ?> <?= htmlspecialchars((string)$u['city']) ?></td>
                <td><?= htmlspecialchars((string)$u['street']) ?> <?= htmlspecialchars((string)$u['house_no']) ?></td>
                <td><?= htmlspecialchars((string)$u['unit_label']) ?></td>
                <td class="text-end"><?= (int)$u['count'] ?></td></tr>
          <?php endforeach; if(!$unitList) echo '<tr><td colspan="4" class="text-muted">Keine Daten.</td></tr>'; ?>
          </tbody></table></div>
      </div></div></div>

      <div class="col-12"><div class="card"><div class="card-body">
        <h2 class="h6 mb-2">Zähler-Analyse (Δ Auszug − Einzug, Mittelwerte)</h2>
        <div class="row">
          <?php foreach($meterKeys as $k=>$lbl): ?>
            <div class="col-md-4"><div class="text-muted small mb-1"><?= htmlspecialchars($lbl) ?></div>
              <div class="display-6"><?= $avgMeters[$k]!==null? htmlspecialchars((string)$avgMeters[$k]) : '—' ?></div>
            </div>
          <?php endforeach; ?>
        </div>
        <div class="small text-muted mt-2">Hinweis: Mittelwerte nur aus Paaren Einzug→Auszug mit beidseitigen Ständen.</div>
      </div></div></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
    <script>(function(){const ctx=document.getElementById('monthlyChart'); if(!ctx) return;
      new Chart(ctx,{type:'bar',data:{labels:<?= json_encode($labels) ?>,datasets:[{label:'Übergaben',data:<?= json_encode($data) ?>}]},
        options:{responsive:true,plugins:{legend:{display:false}},scales:{y:{beginAtZero:true,ticks:{precision:0}}}}});})();</script>
    <?php
    View::render('Statistik', ob_get_clean());
  }
}
