<?php
declare(strict_types=1);

namespace App;

/**
 * View-Helper f√ºr HTML-Rendering
 * Ultra-robuste Version mit vollst√§ndiger Fehlerbehandlung
 */
final class View
{
    /**
     * Rendert eine Seite mit Layout
     */
    public static function render(string $title, string $content): void
    {
        // Sichere Settings-Abfrage mit Fallbacks
        $settings = [];
        $logo = '';
        $customCss = '';
        
        try {
            if (class_exists('App\Settings')) {
                $settings = Settings::getAll();
                $logo = Settings::get('pdf_logo_path', '');
                $customCss = Settings::get('custom_css', '');
            }
        } catch (\Throwable $e) {
            // Graceful fallback bei Settings-Fehlern
            $settings = [
                'pdf_logo_path' => '',
                'custom_css' => '',
                'brand_primary' => '#222357',
                'brand_secondary' => '#e22278',
            ];
            $logo = '';
            $customCss = '';
        }
        
        // CSRF-Token f√ºr neue Formulare vorbereiten
        $csrfToken = '';
        try {
            if (class_exists('App\Csrf')) {
                $csrfToken = Csrf::generateToken();
            }
        } catch (\Throwable $e) {
            // Fallback: einfacher Token
            $csrfToken = bin2hex(random_bytes(16));
        }
        
        // Auth-Status sicher pr√ºfen
        $isAuthenticated = false;
        try {
            if (class_exists('App\Auth')) {
                $isAuthenticated = Auth::check();
            }
        } catch (\Throwable $e) {
            $isAuthenticated = false;
        }
        
        ob_start(); ?>
<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><?= htmlspecialchars($title) ?> ‚Äì Wohnungs√ºbergabe</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
    
    <!-- Poppins Font -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Base Styles -->
    <style>
        :root {
            --primary-color: <?= htmlspecialchars($settings['brand_primary'] ?? '#222357') ?>;
            --secondary-color: <?= htmlspecialchars($settings['brand_secondary'] ?? '#e22278') ?>;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f8f9fa;
        }
        
        .auth-wrap {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .auth-card {
            max-width: 400px;
            width: 100%;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            border: none;
            border-radius: 12px;
        }
        
        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        
        .btn-primary:hover {
            background-color: #1a1d4a;
            border-color: #1a1d4a;
        }
        
        .navbar-brand .logo {
            margin-right: 8px;
        }
        
        .kt-sticky-actions {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: white;
            border-top: 1px solid #dee2e6;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            z-index: 1000;
        }
        
        /* CSRF-Schutz Indikator */
        .csrf-protected::after {
            content: "üîê";
            font-size: 12px;
            margin-left: 5px;
            opacity: 0.6;
            title: "CSRF-gesch√ºtzt";
        }
        
        /* Robuste Styles f√ºr alle Zust√§nde */
        .main-content {
            min-height: calc(100vh - 200px);
            padding: 20px 0;
        }
    </style>
    
    <!-- Custom CSS -->
    <?php if ($customCss): ?>
    <style><?= $customCss ?></style>
    <?php endif; ?>
</head>
<body>
    <!-- CSRF-Token f√ºr JavaScript -->
    <?php if ($csrfToken): ?>
    <meta name="csrf-token" content="<?= htmlspecialchars($csrfToken) ?>">
    <?php endif; ?>
    
    <!-- Navigation -->
    <?php if ($isAuthenticated): ?>
    <nav class="navbar navbar-expand-lg navbar-dark" style="background-color: var(--primary-color);">
        <div class="container-fluid">
            <?php if ($logo && is_file($logo)): ?>
                <img src="/uploads/logo.<?= pathinfo($logo, PATHINFO_EXTENSION) ?>" 
                     alt="Logo" class="navbar-brand logo" style="height: 32px;">
            <?php else: ?>
                <span class="navbar-brand">
                    <span class="logo" style="width:18px;height:18px;background:white;display:inline-block;border-radius:2px;"></span>
                    Wohnungs√ºbergabe
                </span>
            <?php endif; ?>
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <div class="navbar-nav ms-auto">
                    <a class="nav-link" href="/protocols">Protokolle</a>
                    <a class="nav-link" href="/protocols/wizard/start">Neues Protokoll</a>
                    <a class="nav-link" href="/stats">Statistiken</a>
                    <a class="nav-link" href="/settings">Einstellungen</a>
                    <a class="nav-link" href="/logout">Abmelden</a>
                </div>
            </div>
        </div>
    </nav>
    
    <main class="container-fluid main-content">
        <?php self::displayFlash(); ?>
        <?= $content ?>
    </main>
    <?php else: ?>
        <main class="main-content">
            <?php self::displayFlash(); ?>
            <?= $content ?>
        </main>
    <?php endif; ?>
    
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- CSRF-Helper JavaScript -->
    <?php if ($csrfToken): ?>
    <script>
        // CSRF-Token f√ºr AJAX-Requests verf√ºgbar machen
        window.csrfToken = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || '';
        
        // CSRF-Token zu allen AJAX-Requests hinzuf√ºgen
        document.addEventListener('DOMContentLoaded', function() {
            // jQuery falls verf√ºgbar
            if (window.jQuery) {
                jQuery.ajaxSetup({
                    beforeSend: function(xhr, settings) {
                        if (settings.type === 'POST' && !this.crossDomain && window.csrfToken) {
                            xhr.setRequestHeader('X-CSRF-Token', window.csrfToken);
                        }
                    }
                });
            }
            
            // Alle Formulare als CSRF-gesch√ºtzt markieren
            document.querySelectorAll('form').forEach(function(form) {
                if (form.querySelector('input[name="_csrf_token"]')) {
                    form.classList.add('csrf-protected');
                }
            });
        });
    </script>
    <?php endif; ?>
</body>
</html>
        <?php
        $html = ob_get_clean();
        
        header('Content-Type: text/html; charset=utf-8');
        echo $html;
    }

    /**
     * Sichere Flash-Message Anzeige
     */
    private static function displayFlash(): void
    {
        try {
            if (class_exists('App\Flash')) {
                Flash::display();
            }
        } catch (\Throwable $e) {
            // Fallback: Einfache Fehler-Anzeige
            if (isset($_SESSION['_simple_flash'])) {
                foreach ($_SESSION['_simple_flash'] as $msg) {
                    echo '<div class="alert alert-info">' . htmlspecialchars($msg) . '</div>';
                }
                unset($_SESSION['_simple_flash']);
            }
        }
    }

    /**
     * Generiert CSRF-Token Hidden-Field (robust)
     */
    public static function csrfField(): string
    {
        try {
            if (class_exists('App\Csrf')) {
                return Csrf::tokenField();
            }
        } catch (\Throwable $e) {
            // Fallback
        }
        
        // Einfacher Fallback-Token
        $token = bin2hex(random_bytes(16));
        return '<input type="hidden" name="_csrf_token" value="' . htmlspecialchars($token) . '">';
    }

    /**
     * Fallback f√ºr Flash-Messages
     */
    public static function addSimpleFlash(string $message): void
    {
        if (session_status() === PHP_SESSION_NONE) {
            session_start();
        }
        
        if (!isset($_SESSION['_simple_flash'])) {
            $_SESSION['_simple_flash'] = [];
        }
        
        $_SESSION['_simple_flash'][] = $message;
    }
}
