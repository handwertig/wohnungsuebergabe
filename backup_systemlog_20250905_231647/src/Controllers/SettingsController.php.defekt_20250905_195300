<?php

namespace App\Controllers;

use App\Auth;
use App\Settings;
use App\View;

class SettingsController {
    
    private function esc(string $str): string {
        return htmlspecialchars($str, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');
    }

    private function tabs(string $active = ''): string {
        $tabs = [
            'general'   => ['Stammdaten', '/settings'],
            'mail'      => ['Mail', '/settings/mail'],
            'docusign'  => ['DocuSign', '/settings/docusign'],
            'texts'     => ['Textbausteine', '/settings/texts'],
            'users'     => ['Benutzer', '/settings/users'],
            'branding'  => ['Gestaltung', '/settings/branding']
        ];

        $html = '<ul class="nav nav-tabs mb-4">';
        foreach ($tabs as $key => [$label, $url]) {
            $class = ($key === $active) ? 'nav-link active' : 'nav-link';
            $html .= '<li class="nav-item"><a class="'.$class.'" href="'.$url.'">'.$label.'</a></li>';
        }
        $html .= '</ul>';
        return $html;
    }

    public function general(): void {
        Auth::requireAuth();
        $companyName = Settings::get('company_name', '');
        $companyAddress = Settings::get('company_address', '');
        $companyPhone = Settings::get('company_phone', '');
        $companyEmail = Settings::get('company_email', '');

        $body = $this->tabs('general');
        $body .= '<div class="card"><div class="card-body"><h1 class="h6 mb-3">Stammdaten</h1>';
        $body .= '<form method="post" action="/settings/general/save" class="row g-3">';
        $body .= '<div class="col-md-6"><label class="form-label">Firmenname</label><input class="form-control" name="company_name" value="'.$this->esc($companyName).'"></div>';
        $body .= '<div class="col-md-6"><label class="form-label">Telefon</label><input class="form-control" name="company_phone" value="'.$this->esc($companyPhone).'"></div>';
        $body .= '<div class="col-md-6"><label class="form-label">E-Mail</label><input class="form-control" type="email" name="company_email" value="'.$this->esc($companyEmail).'"></div>';
        $body .= '<div class="col-12"><label class="form-label">Adresse</label><textarea class="form-control" name="company_address" rows="3">'.$this->esc($companyAddress).'</textarea></div>';
        $body .= '<div class="col-12"><button class="btn btn-primary">Speichern</button></div>';
        $body .= '</form></div></div>';
        View::render('Einstellungen – Stammdaten', $body);
    }

    public function generalSave(): void {
        Auth::requireAuth();
        Settings::setMany([
            'company_name' => (string)(isset($_POST['company_name']) ? $_POST['company_name'] : ''),
            'company_address' => (string)(isset($_POST['company_address']) ? $_POST['company_address'] : ''),
            'company_phone' => (string)(isset($_POST['company_phone']) ? $_POST['company_phone'] : ''),
            'company_email' => (string)(isset($_POST['company_email']) ? $_POST['company_email'] : '')
        ]);
        \App\Flash::add('success', 'Stammdaten gespeichert.');
        header('Location: /settings');
    }

    public function mail(): void {
        Auth::requireAuth();
        $smtpHost = Settings::get('smtp_host', '');
        $smtpPort = Settings::get('smtp_port', '587');
        $smtpUser = Settings::get('smtp_user', '');
        $smtpPass = Settings::get('smtp_pass', '');
        $smtpSecure = Settings::get('smtp_secure', 'tls');

        $body = $this->tabs('mail');
        $body .= '<div class="card"><div class="card-body"><h1 class="h6 mb-3">E-Mail-Konfiguration</h1>';
        $body .= '<form method="post" action="/settings/mail/save" class="row g-3">';
        $body .= '<div class="col-md-6"><label class="form-label">SMTP-Host</label><input class="form-control" name="smtp_host" value="'.$this->esc($smtpHost).'"></div>';
        $body .= '<div class="col-md-3"><label class="form-label">Port</label><input class="form-control" name="smtp_port" value="'.$this->esc($smtpPort).'"></div>';
        $body .= '<div class="col-md-3"><label class="form-label">Verschlüsselung</label><select class="form-select" name="smtp_secure">';
        $body .= '<option value="tls"'.($smtpSecure === 'tls' ? ' selected' : '').'>TLS</option>';
        $body .= '<option value="ssl"'.($smtpSecure === 'ssl' ? ' selected' : '').'>SSL</option>';
        $body .= '</select></div>';
        $body .= '<div class="col-md-6"><label class="form-label">Benutzername</label><input class="form-control" name="smtp_user" value="'.$this->esc($smtpUser).'"></div>';
        $body .= '<div class="col-md-6"><label class="form-label">Passwort</label><input class="form-control" type="password" name="smtp_pass" value="'.$this->esc($smtpPass).'"></div>';
        $body .= '<div class="col-12"><button class="btn btn-primary">Speichern</button></div>';
        $body .= '</form></div></div>';
        View::render('Einstellungen – Mail', $body);
    }

    public function mailSave(): void {
        Auth::requireAuth();
        Settings::setMany([
            'smtp_host' => (string)(isset($_POST['smtp_host']) ? $_POST['smtp_host'] : ''),
            'smtp_port' => (string)(isset($_POST['smtp_port']) ? $_POST['smtp_port'] : '587'),
            'smtp_user' => (string)(isset($_POST['smtp_user']) ? $_POST['smtp_user'] : ''),
            'smtp_pass' => (string)(isset($_POST['smtp_pass']) ? $_POST['smtp_pass'] : ''),
            'smtp_secure' => (string)(isset($_POST['smtp_secure']) ? $_POST['smtp_secure'] : 'tls')
        ]);
        \App\Flash::add('success', 'Mail-Einstellungen gespeichert.');
        header('Location: /settings/mail');
    }

    public function docusign(): void {
        Auth::requireAuth();
        $clientId = Settings::get('docusign_client_id', '');
        $clientSecret = Settings::get('docusign_client_secret', '');
        $accountId = Settings::get('docusign_account_id', '');
        $isSandbox = Settings::get('docusign_sandbox', '1') === '1';

        $body = $this->tabs('docusign');
        $body .= '<div class="card"><div class="card-body"><h1 class="h6 mb-3">DocuSign-Integration</h1>';
        $body .= '<form method="post" action="/settings/docusign/save" class="row g-3">';
        $body .= '<div class="col-md-6"><label class="form-label">Client ID</label><input class="form-control" name="docusign_client_id" value="'.$this->esc($clientId).'"></div>';
        $body .= '<div class="col-md-6"><label class="form-label">Client Secret</label><input class="form-control" type="password" name="docusign_client_secret" value="'.$this->esc($clientSecret).'"></div>';
        $body .= '<div class="col-md-6"><label class="form-label">Account ID</label><input class="form-control" name="docusign_account_id" value="'.$this->esc($accountId).'"></div>';
        $body .= '<div class="col-md-6"><div class="form-check mt-4"><input class="form-check-input" type="checkbox" name="docusign_sandbox" value="1"'.($isSandbox ? ' checked' : '').'><label class="form-check-label">Sandbox-Modus</label></div></div>';
        $body .= '<div class="col-12"><button class="btn btn-primary">Speichern</button></div>';
        $body .= '</form></div></div>';
        View::render('Einstellungen – DocuSign', $body);
    }

    public function docusignSave(): void {
        Auth::requireAuth();
        Settings::setMany([
            'docusign_client_id' => (string)(isset($_POST['docusign_client_id']) ? $_POST['docusign_client_id'] : ''),
            'docusign_client_secret' => (string)(isset($_POST['docusign_client_secret']) ? $_POST['docusign_client_secret'] : ''),
            'docusign_account_id' => (string)(isset($_POST['docusign_account_id']) ? $_POST['docusign_account_id'] : ''),
            'docusign_sandbox' => isset($_POST['docusign_sandbox']) ? '1' : '0'
        ]);
        \App\Flash::add('success', 'DocuSign-Einstellungen gespeichert.');
        header('Location: /settings/docusign');
    }

    public function texts(): void {
        Auth::requireAuth();
        $body = $this->tabs('texts');
        $body .= '<div class="card"><div class="card-body"><h1 class="h6 mb-3">Textbausteine</h1>';
        $body .= '<p>Textbausteine-Verwaltung wird implementiert...</p>';
        $body .= '</div></div>';
        View::render('Einstellungen – Textbausteine', $body);
    }

    public function textsSave(): void {
        Auth::requireAuth();
        \App\Flash::add('success', 'Textbausteine gespeichert.');
        header('Location: /settings/texts');
    }

    public function users(): void {
        Auth::requireAuth();
        $user = $_SESSION['user'] ?? [];
        $email = $user['email'] ?? '';

        $body = $this->tabs('users');
        $body .= '<div class="card"><div class="card-body"><h1 class="h6 mb-3">Benutzerprofil</h1>';
        $body .= '<form method="post" action="/settings/users/save" class="row g-3">';
        $body .= '<div class="col-md-6"><label class="form-label">E-Mail</label><input class="form-control" type="email" name="email" value="'.$this->esc($email).'"></div>';
        $body .= '<div class="col-md-6"><label class="form-label">Neues Passwort</label><input class="form-control" type="password" name="password" placeholder="Leer lassen für keine Änderung"></div>';
        $body .= '<div class="col-12"><button class="btn btn-primary">Speichern</button></div>';
        $body .= '</form></div></div>';
        View::render('Einstellungen – Benutzer', $body);
    }

    public function usersSave(): void {
        Auth::requireAuth();
        $pdo = \App\Database::pdo();
        $uid = (int)($_SESSION['user']['id'] ?? 0);
        if (!$uid) {
            \App\Flash::add('error', 'Benutzer-ID nicht gefunden.');
            header('Location: /settings/users');
            return;
        }

        $newEmail = (string)(isset($_POST['email']) ? $_POST['email'] : '');
        if ($newEmail !== '' && $newEmail !== $_SESSION['user']['email']) {
            $st = $pdo->prepare('UPDATE users SET email=?, updated_at=NOW() WHERE id=?');
            $st->execute(array($newEmail, $uid));
            $_SESSION['user']['email'] = $newEmail;
        }
        $pw = (string)(isset($_POST['password']) ? $_POST['password'] : '');
        if ($pw !== '') {
            $hash = password_hash($pw, PASSWORD_BCRYPT);
            $st = $pdo->prepare('UPDATE users SET password_hash=?, updated_at=NOW() WHERE id=?');
            $st->execute(array($hash, $uid));
        }

        \App\Flash::add('success', 'Profil gespeichert.');
        header('Location: /settings/users');
    }

    public function branding(): void {
        Auth::requireAuth();
        $css = (string)Settings::get('custom_css', '');
        $logo = (string)Settings::get('pdf_logo_path', '');

        $body = $this->tabs('branding');
        $body .= '<div class="card"><div class="card-body"><h1 class="h6 mb-3">Gestaltung (Personalisierungen)</h1>';
        
        $body .= '<form method="post" action="/settings/branding/save" enctype="multipart/form-data" class="row g-3">';
        $body .= '<div class="col-md-6">';
        $body .= '<label class="form-label">Logo für PDF/Backend</label>';
        $body .= '<input class="form-control" type="file" name="pdf_logo" accept="image/*">';
        
        if ($logo && is_file($logo)) {
            $body .= '<div class="mt-2 p-2 border rounded bg-light">';
            $body .= '<div class="d-flex justify-content-between align-items-center">';
            $body .= '<span class="small text-muted">Aktuelles Logo: ' . $this->esc(basename($logo)) . '</span>';
            $body .= '<button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteLogo()">Entfernen</button>';
            $body .= '</div></div>';
        } else {
            $body .= '<div class="form-text">Kein Logo hochgeladen. Bei fehlendem Logo wird "Wohnungsübergabe" als Text angezeigt.</div>';
        }
        
        $body .= '</div>';
        
        $body .= '<div class="col-12">';
        $body .= '<label class="form-label">Eigenes CSS (Backend‑Theme)</label>';
        $body .= '<textarea class="form-control" rows="6" name="custom_css">' . $this->esc($css) . '</textarea>';
        $body .= '<div class="form-text">Wird als &lt;style&gt; mitgeladen – vorsichtig einsetzen.</div>';
        $body .= '</div>';
        
        $body .= '<div class="col-12"><button class="btn btn-primary">Speichern</button></div>';
        $body .= '</form>';
        
        $body .= '<form id="deleteLogoForm" method="post" action="/settings/branding/delete-logo" style="display: none;">';
        $body .= '<input type="hidden" name="delete_logo" value="1">';
        $body .= '</form>';
        
        $body .= '<script>';
        $body .= 'function deleteLogo() {';
        $body .= '  if (confirm("Möchten Sie das Logo wirklich entfernen? Es wird dann wieder der Text \\"Wohnungsübergabe\\" angezeigt.")) {';
        $body .= '    document.getElementById("deleteLogoForm").submit();';
        $body .= '  }';
        $body .= '}';
        $body .= '</script>';
        
        $body .= '</div></div>';
        View::render('Einstellungen – Gestaltung', $body);
    }

    public function brandingSave(): void {
        Auth::requireAuth();
        Settings::set('custom_css', (string)(isset($_POST['custom_css']) ? $_POST['custom_css'] : ''));

        if (!empty($_FILES['pdf_logo']['tmp_name']) && is_uploaded_file($_FILES['pdf_logo']['tmp_name'])) {
            $dir = realpath(__DIR__ . '/../../storage/branding');
            if ($dir === false) {
                $dir = __DIR__ . '/../../storage/branding';
                @mkdir($dir, 0775, true);
            }
            $ext = strtolower(pathinfo((string)(isset($_FILES['pdf_logo']['name']) ? $_FILES['pdf_logo']['name'] : ''), PATHINFO_EXTENSION) ?: 'png');
            $dest = rtrim($dir, '/') . '/logo.' . $ext;
            if (move_uploaded_file($_FILES['pdf_logo']['tmp_name'], $dest)) {
                $real = realpath($dest);
                Settings::set('pdf_logo_path', $real ? $real : $dest);
            }
        }

        \App\Flash::add('success', 'Gestaltung gespeichert.');
        header('Location: /settings/branding');
    }

    public function brandingDeleteLogo(): void {
        Auth::requireAuth();
        
        if (!isset($_POST['delete_logo']) || $_POST['delete_logo'] !== '1') {
            \App\Flash::add('error', 'Ungültige Anfrage.');
            header('Location: /settings/branding');
            return;
        }

        $logo = (string)Settings::get('pdf_logo_path', '');
        
        if ($logo && is_file($logo)) {
            if (unlink($logo)) {
                Settings::set('pdf_logo_path', '');
                \App\Flash::add('success', 'Logo wurde erfolgreich entfernt. Es wird nun wieder "Wohnungsübergabe" als Text angezeigt.');
            } else {
                \App\Flash::add('error', 'Logo-Datei konnte nicht gelöscht werden.');
            }
        } else {
            Settings::set('pdf_logo_path', '');
            \App\Flash::add('info', 'Logo-Einstellung wurde zurückgesetzt.');
        }

        header('Location: /settings/branding');
    }
}
